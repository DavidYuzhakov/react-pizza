{"version":3,"file":"static/js/FullPizza.e14bf8cb.chunk.js","mappings":"2LAOe,SAASA,IACtB,MAAOC,EAAOC,IAAYC,EAAAA,EAAAA,aAUpB,GAAEC,IAAOC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,MAgBjB,IAdAC,EAAAA,EAAAA,YAAU,MACRC,iBACE,IACE,MAAM,KAAEC,SAAeC,EAAAA,EAAMC,IAAI,qDAADC,OAAsDT,IACtFF,EAASQ,EACX,CAAE,MAAOI,GACPC,MAAM,mIACNC,QAAQC,KAAKH,GACbR,EAAS,IACX,CACF,CACAY,EAAgB,GACf,KAEEjB,EACH,OACEkB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,UACxBC,EAAAA,EAAAA,MAACC,EAAAA,GAAa,CACZC,MAAO,EACPC,MAAO,IACPC,OAAQ,IACRC,QAAQ,cACRC,gBAAgB,UAChBC,gBAAgB,UAASR,SAAA,EAEzBF,EAAAA,EAAAA,KAAA,UAAQW,GAAG,MAAMC,GAAG,MAAMC,EAAE,SAC5Bb,EAAAA,EAAAA,KAAA,QAAMc,EAAE,KAAKC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,QACtDP,EAAAA,EAAAA,KAAA,QAAMc,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,QACtDP,EAAAA,EAAAA,KAAA,QAAMc,EAAE,MAAMC,EAAE,IAAIC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,QACrDP,EAAAA,EAAAA,KAAA,QAAMc,EAAE,MAAMC,EAAE,KAAKC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,QACtDP,EAAAA,EAAAA,KAAA,QAAMc,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,QACvDP,EAAAA,EAAAA,KAAA,QAAMc,EAAE,MAAMC,EAAE,MAAMC,GAAG,IAAIC,GAAG,IAAIX,MAAM,MAAMC,OAAO,YAO/D,OACEJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,sBAAqBC,SAAA,EAClCC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAKkB,IAAKpC,EAAMqC,SAAUC,IAAI,WAC9BpB,EAAAA,EAAAA,KAAA,MAAAE,SAAMpB,EAAMuC,YAEdlB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,6BAAQpB,EAAMwC,MAAO,aACzBnB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,+CAAWpB,EAAMyC,OAAQ,YAC7BpB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,wEAAgBpB,EAAM0C,MAAMC,KAAK,kBAAS,oBAC9CtB,EAAAA,EAAAA,MAAA,MAAAD,SAAA,CAAI,sDAAYpB,EAAM4C,MAAMC,OAAS,EAAI,uHAZ5B,CAAC,uCAAU,4EAYsD7C,EAAM4C,MAAM,QAC1FvB,EAAAA,EAAAA,MAAA,KAAAD,SAAA,CAAG,qDAAYpB,EAAM8C,aAI7B,C","sources":["pages/FullPizza.tsx"],"sourcesContent":["import axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom'\r\nimport ContentLoader from \"react-content-loader\"\r\n\r\n// useParams - вытаскиваем динамический парам. из path в роуте (:nameparams)\r\n\r\nexport default function FullPizza () {\r\n  const [pizza, setPizza] = useState<{\r\n    imageUrl: string,\r\n    title: string,\r\n    price: number,\r\n    rating: number,\r\n    sizes: number[],\r\n    types: number[],\r\n    desc: string\r\n  }>()\r\n\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  \r\n  useEffect(() => {\r\n    async function fetchFullPizza () {\r\n      try {\r\n        const { data } = await axios.get(`https://655c22f0ab37729791a9e447.mockapi.io/items/${id}`)\r\n        setPizza(data)\r\n      } catch (err) {\r\n        alert(\"Не удалось данную пиццу :-)\")\r\n        console.warn(err)\r\n        navigate('/')\r\n      }\r\n    }\r\n    fetchFullPizza()\r\n  }, []) // its not necessary to specify the id in deps\r\n\r\n  if (!pizza) {\r\n    return (\r\n      <div className=\"container\">\r\n        <ContentLoader \r\n          speed={2}\r\n          width={500}\r\n          height={500}\r\n          viewBox=\"0 0 500 500\"\r\n          backgroundColor=\"#f3f3f3\"\r\n          foregroundColor=\"#ecebeb\"\r\n        >\r\n          <circle cx=\"100\" cy=\"100\" r=\"100\" /> \r\n          <rect x=\"20\" y=\"222\" rx=\"6\" ry=\"6\" width=\"170\" height=\"30\" /> \r\n          <rect x=\"218\" y=\"40\" rx=\"3\" ry=\"3\" width=\"150\" height=\"25\" /> \r\n          <rect x=\"220\" y=\"0\" rx=\"3\" ry=\"3\" width=\"150\" height=\"25\" /> \r\n          <rect x=\"220\" y=\"80\" rx=\"3\" ry=\"3\" width=\"150\" height=\"25\" /> \r\n          <rect x=\"220\" y=\"120\" rx=\"3\" ry=\"3\" width=\"150\" height=\"25\" /> \r\n          <rect x=\"219\" y=\"172\" rx=\"3\" ry=\"3\" width=\"226\" height=\"80\" />\r\n        </ContentLoader>\r\n    </div>\r\n    )\r\n  }\r\n  const typesNames = ['тонкое', 'традиционное']\r\n\r\n  return (\r\n    <div className=\"container fullPizza\">\r\n      <div>\r\n        <img src={pizza.imageUrl} alt='pizza' />\r\n        <h2>{ pizza.title }</h2>\r\n      </div>\r\n      <div className='fullPizza-info'>\r\n        <h4>Цена: { pizza.price }₽</h4>\r\n        <h4>Рейтинг: { pizza.rating } / 10</h4>\r\n        <h4>Размер пиццы: { pizza.sizes.join('см, ') }см </h4>\r\n        <h4>Тип пиццы: {pizza.types.length > 1 ? 'тонкое, трандиционное' : typesNames[pizza.types[0]]}</h4>\r\n        <p>Описание: { pizza.desc }</p>\r\n      </div>      \r\n    </div>\r\n  )\r\n}\r\n"],"names":["FullPizza","pizza","setPizza","useState","id","useParams","navigate","useNavigate","useEffect","async","data","axios","get","concat","err","alert","console","warn","fetchFullPizza","_jsx","className","children","_jsxs","ContentLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","cx","cy","r","x","y","rx","ry","src","imageUrl","alt","title","price","rating","sizes","join","types","length","desc"],"sourceRoot":""}